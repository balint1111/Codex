---
apiVersion: v1
kind: Secret
metadata:
  name: codex-db-credentials
  namespace: dani
  labels:
    app: codex-db
type: Opaque
stringData:
  POSTGRES_DB: codex
  POSTGRES_USER: codex
  POSTGRES_PASSWORD: codex

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: codex-db-pvc
  namespace: dani
  labels:
    app: codex-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codex-db
  namespace: dani
  labels:
    app: codex-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codex-db
  template:
    metadata:
      labels:
        app: codex-db
    spec:
      containers:
        - name: postgres
          image: postgres:15
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: codex-db-credentials
  namespace: dani
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: codex-db-credentials
  namespace: dani
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: codex-db-credentials
  namespace: dani
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: codex-db-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: codex-db
  namespace: dani
  labels:
    app: codex-db
spec:
  type: NodePort
  selector:
    app: codex-db
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 31082
