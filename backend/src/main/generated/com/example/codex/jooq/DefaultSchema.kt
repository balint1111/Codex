/*
 * This file is generated by jOOQ.
 */
package com.example.codex.jooq


import com.example.codex.jooq.tables.Privilege
import com.example.codex.jooq.tables.UserPrivilege
import com.example.codex.jooq.tables.Users

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.DSL
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class DefaultSchema : SchemaImpl(DSL.name(""), DefaultCatalog.DEFAULT_CATALOG, DSL.comment("")) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>PRIVILEGE</code>.
     */
    val PRIVILEGE: Privilege get() = Privilege.PRIVILEGE

    /**
     * The table <code>USER_PRIVILEGE</code>.
     */
    val USER_PRIVILEGE: UserPrivilege get() = UserPrivilege.USER_PRIVILEGE

    /**
     * The table <code>USERS</code>.
     */
    val USERS: Users get() = Users.USERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Privilege.PRIVILEGE,
        UserPrivilege.USER_PRIVILEGE,
        Users.USERS
    )
}
