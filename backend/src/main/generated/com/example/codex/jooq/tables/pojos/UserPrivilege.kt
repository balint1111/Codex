/*
 * This file is generated by jOOQ.
 */
package com.example.codex.jooq.tables.pojos


import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.Table

import java.io.Serializable


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
@Entity
@Table(
    name = "user_privilege"
)
data class UserPrivilege(
    @get:Column(name = "user_id")
    val userId: Long? = null,
    @get:Column(name = "privilege_id")
    val privilegeId: Long? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: UserPrivilege = other as UserPrivilege
        if (this.userId == null) {
            if (o.userId != null)
                return false
        }
        else if (this.userId != o.userId)
            return false
        if (this.privilegeId == null) {
            if (o.privilegeId != null)
                return false
        }
        else if (this.privilegeId != o.privilegeId)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.userId == null) 0 else this.userId.hashCode())
        result = prime * result + (if (this.privilegeId == null) 0 else this.privilegeId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("UserPrivilege (")

        sb.append(userId)
        sb.append(", ").append(privilegeId)

        sb.append(")")
        return sb.toString()
    }
}
