/*
 * This file is generated by jOOQ.
 */
package com.example.codex.jooq.keys


import com.example.codex.jooq.tables.Privilege
import com.example.codex.jooq.tables.Users
import com.example.codex.jooq.tables.records.PrivilegeRecord
import com.example.codex.jooq.tables.records.UsersRecord

import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val CONSTRAINT_4: UniqueKey<PrivilegeRecord> = Internal.createUniqueKey(Privilege.PRIVILEGE, DSL.name("CONSTRAINT_4"), arrayOf(Privilege.PRIVILEGE.NAME), true)
val PK_PRIVILEGE: UniqueKey<PrivilegeRecord> = Internal.createUniqueKey(Privilege.PRIVILEGE, DSL.name("PK_PRIVILEGE"), arrayOf(Privilege.PRIVILEGE.ID), true)
val CONSTRAINT_4D: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("CONSTRAINT_4D"), arrayOf(Users.USERS.USERNAME), true)
val PK_USERS: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("PK_USERS"), arrayOf(Users.USERS.ID), true)
