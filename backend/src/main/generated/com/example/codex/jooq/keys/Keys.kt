/*
 * This file is generated by jOOQ.
 */
package com.example.codex.jooq.keys


import com.example.codex.jooq.tables.records.PRIVILEGE
import com.example.codex.jooq.tables.records.USERS

import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val CONSTRAINT_4: UniqueKey<PRIVILEGE> = Internal.createUniqueKey(com.example.codex.jooq.tables.PRIVILEGE.PRIVILEGE, DSL.name("CONSTRAINT_4"), arrayOf(com.example.codex.jooq.tables.PRIVILEGE.PRIVILEGE.NAME), true)
val PK_PRIVILEGE: UniqueKey<PRIVILEGE> = Internal.createUniqueKey(com.example.codex.jooq.tables.PRIVILEGE.PRIVILEGE, DSL.name("pk_privilege"), arrayOf(com.example.codex.jooq.tables.PRIVILEGE.PRIVILEGE.ID), true)
val CONSTRAINT_4D: UniqueKey<USERS> = Internal.createUniqueKey(com.example.codex.jooq.tables.USERS.USERS, DSL.name("CONSTRAINT_4D"), arrayOf(com.example.codex.jooq.tables.USERS.USERS.USERNAME), true)
val PK_USERS: UniqueKey<USERS> = Internal.createUniqueKey(com.example.codex.jooq.tables.USERS.USERS, DSL.name("pk_users"), arrayOf(com.example.codex.jooq.tables.USERS.USERS.ID), true)
